<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd" [

<!-- Begin Document Specific Declarations -->


<!-- End Document Specific Declarations -->

]>
<?dtall dict="E:body"?><?dtall dict="E:li"?><?dtall dict="E:p"?><?dtall
dict="E:shortdesc"?><?dtall dict="E:title"?><?dtall dict="E:topic"?><?dtall
dict="E:ul"?><?dtall dict="li"?><?dtall dict="P:Body"?><?dtall dict="P:Info"?><?dtall
dict="P:Title"?><?dtall dict="ul"?><topic id = "id1382B800CUI"
    xmlns:ditaarch = "http://dita.oasis-open.org/architecture/2005/">
<title>Setting Up Wrapping Rules</title>
<shortdesc>Wrapping rules are used to wrap one or more elements
in new elements to create hierarchies in the structured file.</shortdesc>
<prolog><author>Scott Prentice</author>
<critdates><created date = "2013-08-02"/>
<revised modified = "2014-02-10"/></critdates></prolog>
<body><p><indexterm>conversion table<indexterm>wrapping rules</indexterm></indexterm>For
all but the simplest of conversions, and definitely for DITA, after
creating the initial base elements with the mapping rules, you’ll
need to define rules that wrap those elements in other elements
to create nested structures. These rules can be created in the same
table as the mapping rules, or you can create additional tables in
the same file to contain the wrapping rules.</p>
<p>The format for a wrapping rule is similar to that of a mapping
rule in that the first column defines the element(s) that are acted
on, or wrapped, the second column defines the element that is the
container or wrapper, and the third column defines the optional
qualifier. The first column may be very lengthy in its description
of exactly what sequence of elements to match on and wrap. The second
column is always just the wrapper element name and possibly attribute(s)
that are assigned to that element.</p>
<p>The syntax of the first column is similar to that of an EDD (or
DTD) general rule syntax. It describes a sequence of one or more
elements, which if met, will cause those elements to be wrapped.
To identify an element you use the “E:” prefix, which is followed
by the element name and/or a qualifier label. You can specify a
sequence of elements by separating them with a comma, and if you
want to specify optional groups of elements use parenthesis to define
the group and the vertical bar character to separate the elements
within the group. Special frequency operators follow an element
or group to indicate the number of times that item can exist. The
options are “*” (zero or more), “+” (one or more), and “?” (zero
or one). If no frequency operator is provided, that means the element
must exist once.</p>
<p>The following simple example performs these wrapping rules:</p>
<ul><li>select a sequence of one or more &lt;li> elements and wrap
them in a &lt;ul> element</li>
<li>select a sequence of &lt;p> and/or &lt;ul> elements and wrap
them in a &lt;body> element</li>
<li>select a sequence of a &lt;title> element optionally followed
by a &lt;shortdesc> element followed by a &lt;body> element and
wrap them in a &lt;topic> element</li>
<li>select a sequence of one or more &lt;topic> elements and wrap
them in a &lt;dita> element</li></ul>
<table frame = "all" colsep = "1" rowsep = "1">
<tgroup cols = "3" outputclass = "FormatA" colsep = "1" rowsep = "1">
<colspec colnum = "1" colname = "1" colwidth = "2.677in"/>
<colspec colnum = "2" colname = "2" colwidth = "2.167in"/>
<colspec colnum = "3" colname = "3" colwidth = "2.167in"/>
<tbody>
<row rowsep = "1">
<entry colname = "1">E:li+</entry>
<entry colname = "2">ul</entry>
<entry colname = "3"></entry>
</row>
<row rowsep = "1">
<entry colname = "1">(E:p | E:ul)+</entry>
<entry colname = "2">body</entry>
<entry colname = "3"></entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:title, E:shortdesc?, E:body</entry>
<entry colname = "2">topic</entry>
<entry colname = "3"></entry>
</row>
<row rowsep = "0">
<entry colname = "1">E:topic+</entry>
<entry colname = "2">dita</entry>
<entry colname = "3"></entry>
</row>
</tbody>
</tgroup></table>
<p>While these rules will “work”, it’s not a very realistic wrapping
table for a number of reasons. First, it assumes that all topics
are defined by the same heading level; there’s no topic hierarchy
created by these rules. Also, it assumes that the content in the
topics only consist of paragraphs and bulleted lists (and these
bulleted lists only have one paragraph per list item).</p>
<p>A possibly more realistic example would be one that makes used
of qualifiers. The following examples show a mapping table that
uses qualifiers and a wrapping table that makes use of those qualifiers.</p>
<p>First, a partial mapping table example. These mapping rules assign
qualifiers for the different heading levels so this hierarchy can
be preserved. No qualifier is assigned to the &lt;shortdesc> element
since this is a unique element, only used in one situation. The
“Body” tag is mapped to a &lt;p> element and assigned a “L0” (level
0) qualifier. You could have additional types of paragraphs at this
level and give them all “L0” qualifiers, and they would all get
grouped together in the wrapping rule. The “Bullet1” tag is mapped
to a &lt;p> element and assigned a “B1” qualifier. This allows you
to have list items that have multiple paragraphs, with the “Bullet1Cont”
tag using a “L1” (level 1) qualifier.</p>
<table frame = "all" colsep = "1" rowsep = "1">
<tgroup cols = "3" outputclass = "FormatA" colsep = "1" rowsep = "1">
<colspec colnum = "1" colname = "1" colwidth = "2.333in"/>
<colspec colnum = "2" colname = "2" colwidth = "2.333in"/>
<colspec colnum = "3" colname = "3" colwidth = "2.333in"/>
<tbody>
<row rowsep = "1">
<entry colname = "1">P:Title</entry>
<entry colname = "2">title</entry>
<entry colname = "3">H0</entry>
</row>
<row rowsep = "1">
<entry colname = "1">P:Heading1</entry>
<entry colname = "2">title</entry>
<entry colname = "3">H1</entry>
</row>
<row rowsep = "1">
<entry colname = "1">P:Heading2</entry>
<entry colname = "2">title</entry>
<entry colname = "3">H2</entry>
</row>
<row rowsep = "1">
<entry colname = "1">P:Info</entry>
<entry colname = "2">shortdesc</entry>
<entry colname = "3"></entry>
</row>
<row rowsep = "1">
<entry colname = "1">P:Body</entry>
<entry colname = "2">p</entry>
<entry colname = "3">L0</entry>
</row>
<row rowsep = "1">
<entry colname = "1">P:Bullet1</entry>
<entry colname = "2">p</entry>
<entry colname = "3">B1</entry>
</row>
<row rowsep = "0">
<entry colname = "1">P:Bullet1Cont</entry>
<entry colname = "2">p</entry>
<entry colname = "3">L1</entry>
</row>
</tbody>
</tgroup></table>
<p>Next, a partial wrapping table example makes use of the qualifiers
defined above. The list items always start with a “B1” item (note
that the element name is not needed when referring to a “class”
of elements), and are followed by zero or more “L1” items (in this
case it’s only the Bullet1Cont paras, but could be other items like nested
lists or figures, etc.). The “B1” &lt;li> elements (one or more)
are wrapped in a &lt;ul>, which is assigned a “L0” qualifier. Then,
all “L0” items are wrapped in &lt;body>. Note that using qualifiers
can simplify the wrapping rules by allowing you to refer to a group
of elements. This also makes it easier to add new elements in the future
as long as you remember the “rules” you used for the qualifiers.</p>
<p>In this example, when wrapping topics, because we assigned qualifiers
to each of the heading levels, we are able to maintain the original
hierarchy. Start at the lowest level (“H2” in this case) and wrap
all &lt;title>, &lt;shortdesc> and &lt;body> sequences in a &lt;topic>
element (which is assigned a “T2” qualifier). Then go to the next
level (“H1”) and wrap those &lt;title>, &lt;shortdesc>, &lt;body>,
and zero or more “T2” &lt;topic> sequences in a &lt;topic> (assigned
a “T1” qualifier). Then one more level to get the “T0” topics. It’s
not likely that a file with have multiple “T0” topics, but just in
case, make the final rule inclusive enough to wrap up more than
one in a &lt;dita> element.</p>
<table frame = "all" colsep = "1" rowsep = "1">
<tgroup cols = "3" outputclass = "FormatA" colsep = "1" rowsep = "1">
<colspec colnum = "1" colname = "1" colwidth = "2.333in"/>
<colspec colnum = "2" colname = "2" colwidth = "2.333in"/>
<colspec colnum = "3" colname = "3" colwidth = "2.333in"/>
<tbody>
<row rowsep = "1">
<entry colname = "1">E:[B1], E:[L1]*</entry>
<entry colname = "2">li</entry>
<entry colname = "3">B1</entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:li[B1]+</entry>
<entry colname = "2">ul</entry>
<entry colname = "3">L0</entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:[L0]+</entry>
<entry colname = "2">body</entry>
<entry colname = "3"></entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:title[H2], E:shortdesc?, E:body?</entry>
<entry colname = "2">topic</entry>
<entry colname = "3">T2</entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:title[H1], E:shortdesc?, E:body?, E:topic[T2]*</entry>
<entry colname = "2">topic</entry>
<entry colname = "3">T1</entry>
</row>
<row rowsep = "1">
<entry colname = "1">E:title[H0], E:shortdesc?, E:body?, E:topic[T1]*</entry>
<entry colname = "2">topic</entry>
<entry colname = "3">T0</entry>
</row>
<row rowsep = "0">
<entry colname = "1">E:topic[T0]+</entry>
<entry colname = "2">dita</entry>
<entry colname = "3"></entry>
</row>
</tbody>
</tgroup></table>
<p>The root &lt;dita> element may not always be needed, but for
the FM2DITA topic processing tools, this is required.</p>
<p>...</p></body></topic>
